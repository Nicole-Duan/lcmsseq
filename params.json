{"name":"LCMS-seq","tagline":"Automated sequencing by two-dimensional analysis of mass chromatograms","body":"![](https://raw.githubusercontent.com/szostaklab/lcmsseq/gh-pages/Github_graphic.png)\r\n\r\n### Welcome to the Szostak Lab's LCMS-seq code repository\r\nThis code demonstrates an algorithm to automate sequence extraction from laddering patterns in liquid chromatography-mass spectrometry data. The algorithm has been implemented as a Pure Python 3 package, accompanying our manuscript _Bidirectional direct sequencing of non-canonical RNA by two-dimensional analysis of mass chromatograms_ published in October 2015 in the _Journal of the American Chemical Society_. The source code for this work has been made available under the GNU AGPL v3.\r\n\r\n### Documentation and installation\r\nPlease see the publication for background on the algorithm and application.  The [readme](https://github.com/szostaklab/lcmsseq/blob/master/README.md) file, found in the repo top directory, contains detailed instructions for installation on multiple platforms.  The package has been lightly tested on Windows, Linux, and OS X using Python 3.4.  There are several dependencies, including the clustalo binary that must be installed prior to use.  Please see the readme for details.  Several example datasets are also included in the /examples directory, and instructions on running the examples are also included in the readme file.\r\n\r\n### Authors\r\nAnders Björkbom, Victor S. Lelyveld, Shenglong Zhang, Weicheng Zhang, Chun Pong Tam, J. Craig Blain, and Jack W. Szostak at HHMI, MGH, and Harvard\r\n\r\n### Help\r\nPlease contact @lelyveld for help or pull requests or open an issue.\r\n\r\n---\r\n## Getting started with the lcmsseq Python package\r\nNote: An updated version of this documentation is available in the [readme](https://github.com/szostaklab/lcmsseq/blob/master/README.md).\r\n\r\n## Short version\r\n\r\nChange to the directory where you've unzipped this file.  In Debian/Ubuntu Linux, do:\r\n\r\n    $ sudo pip3 install numpy matplotlib pandas scipy patsy statsmodels\r\n    ...\r\n    $ sudo apt-get install clustalo\r\n    ...\r\n    $ sudo python3 setup.py install\r\n    ...\r\n    $ cd examples\r\n    ...\r\n    $ python3 test.py\r\n    ...\r\n\r\nThe final command will process and display an example dataset and resulting sequencing reads.\r\n\r\n\r\n## Long version\r\n\r\nThis package gives a proof-of-concept implementation of an algorithm for extracting sequence information from a\r\ntwo-dimensional dataset of degradative fragments of a sequenceable polymer.\r\n\r\n\r\n### Requirements\r\n\r\nYou must have Python 3. In recent Linux distributions, Python 3 is typically installed by default. If not, use your\r\n distro's package manager to install the latest python 3 package.\r\n\r\nA few generally available Python 3 packages (most from the Scipy stack) must also be installed:\r\n\r\n    numpy 1.9+\r\n    matplotlib 1.3+\r\n    statsmodels 0.6+\r\n    scipy 0.9+\r\n    pandas 0.7.1+\r\n    patsy 0.3+\r\n\r\nThe bottom three packages are only necessary to satisfy installation requirements for statsmodels. Information\r\nabout the Scipy stack may be found here:\r\n\r\n    http://www.scipy.org/install.html\r\n\r\nOn Linux, it should generally be possible to use pip to satisfy all Python 3 module dependencies quickly. Or use your\r\nfavorite python package manager. Alternatively, it may be possible to install certain Python distributions that contain\r\nall or part of the above packages (e.g. Anaconda). Installation details for each environment are suggested below.\r\n\r\nFor this initial release, the package currently makes use of the clustalo binary for alignment operations.  See specific\r\ninstructions below. The binary for ClustalO must be named 'clustalo' must be executable from the current path for the\r\ncurrent user.\r\n\r\nFinally, for this release, the input data must be generated by Agilent MassHunter Qualitative Analysis software.\r\nSee below under _Input Data_ for more discussion.\r\n\r\n\r\n#### SATISFYING REQUIREMENTS IN LINUX:\r\n\r\nOn Debian/Ubuntu systems with typical configuration, it should be possible to run the following command to install all\r\nrequired python packages:\r\n\r\n    $ sudo pip3 install numpy matplotlib scipy pandas patsy statsmodels\r\n\r\nOn Ubuntu-based systems that use the apt package manager, ClustalO can easily be obtained by running the following\r\ncommand to install it from default Ubuntu repositories.\r\n\r\n    $ sudo apt-get install clustalo\r\n\r\nIf you obtain clustalo from another source, the binary for ClustalO must be named 'clustalo' must be executable from the\r\n current path for the current user.\r\n\r\nAfter fulfilling these requirements, see the installation section below to install this package.\r\n\r\n\r\n#### SATISFYING REQUIREMENTS IN OS X:\r\n\r\nUsers who already have the Scipy stack for Python 3 installed may be able to simply run the following:\r\n\r\n    sudo pip3 install patsy statsmodels\r\n\r\nAlternatively, if this is your first installation of Python 3 and/or the Scipy stack, the easiest method to satisfy\r\npackage dependencies in OS X is to install a free scientific Python 3 distribution, such as Anaconda. This suite can be\r\ndownloaded from here:\r\n\r\n    http://continuum.io/downloads#py34\r\n\r\nIf this works for you, then skip to installation of clustalo below.  Alternatively, download and install the latest\r\nstable Python 3.4+ binary release obtainable from https://www.python.org . The current version at the time of this\r\nwriting is here:\r\n\r\n    https://www.python.org/ftp/python/3.4.3/python-3.4.3-macosx10.6.pkg\r\n\r\nInstalling the packages may be achieved through pip3, as above for Linux. However, as of this writing, direct\r\ncompilation of numpy is problematic.\r\n\r\nThe OS X binary for clustalo can be found here:\r\n\r\n    http://www.clustal.org/omega/clustal-omega-1.2.0-macosx\r\n\r\nThe binary should be renamed, made executable, and moved to an accessible path, as follows:\r\n\r\n    $ mv clustal-omega-1.2.0-macosx clustalo\r\n    $ chmod a+x clustalo\r\n    $ sudo mv clustalo /usr/local/bin\r\n\r\nAfter fulfilling these requirements, see the installation section below to install this package.\r\n\r\n\r\n#### SATISFYING REQUIREMENTS IN WINDOWS\r\n\r\nFor Windows users, the struggle is real. It may be possible satisfy all dependencies by installing a third-party Python\r\ndistribution. At present, the easiest strategy in Windows is to install Anaconda's Python 3 distribution, available\r\nhere:\r\n\r\n    http://continuum.io/downloads#py34\r\n\r\nIf Python 3 from this distribution works for you, then skip down to clustalo installation. If not, download and\r\ninstall the latest stable Python 3.4+ binary release obtainable from https://www.python.org. During installation in\r\nWindows, select the option to \"add python.exe to path,\" which will make life much easier. The\r\ncurrent Windows 64-bit installer can be found here:\r\n\r\n    https://www.python.org/ftp/python/3.4.3/python-3.4.3.amd64.msi\r\n\r\nTo install packages, generally pip does not work without errors. Thankfully, Christoph Gohlke at the Laboratory for\r\nFluorescence Dynamics, University of California, Irvine, maintains an unofficial repository of Windows python package\r\nbinaries, such that direct compilation on Windows is unnecessary. After installing Python 3.4 in Windows, download the\r\ncp34 versions of the required packages. Be sure to install the bit version that matches your version of Python 3.4\r\n(simply run python at the command line to check whether you have the 32-bit or 64-bit version). The pip \"wheels\" below\r\nallow quick installation in Windows. Currently, those files can be found at the following URL:\r\n\r\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/\r\n\r\nFor 64-bit Python 3.4 in 64-bit Windows, download the following files:\r\n\r\n    numpy‑1.9.2+mkl‑cp34‑none‑win_amd64.whl\r\n    scipy‑0.15.1‑cp34‑none‑win_amd64.whl\r\n    matplotlib‑1.4.3‑cp34‑none‑win_amd64.whl\r\n    pandas‑0.16.0‑cp34‑none‑win_amd64.whl\r\n    patsy‑0.3.0‑py2.py3‑none‑any.whl\r\n    statsmodels‑0.6.1‑cp34‑none‑win_amd64.whl\r\n\r\nInstall each of these packages by running the following command on each filename from a command prompt:\r\n\r\n    pip install filename.whl\r\n\r\nThe ClustalO binary must be installed and accessible in the current path. ClustalO for Windows can be obtained here:\r\n\r\n    http://www.clustal.org/omega/clustal-omega-1.2.0-win32.zip\r\n\r\nUnzip the contents of this zipfile to a good location, such as C:\\clustalo . The path must be changed to allow\r\nclustalo.exe to be accessible from elsewhere. The path can be changed from Control Panel > System > Advanced system\r\nsettings > Advanced tab > Environment Variables > System Variables > Path. Append \"C:\\clustalo;\" to the value of the\r\n\"Path\" variable and hit OK.\r\n\r\nAfter fulfilling these requirements, see the installation section below to install this package.\r\n\r\n\r\n### Installation\r\n\r\nA setup script is included with this package for installation.  From the root directory of the package, simply invoke\r\nthe setup.py script. In Linux or OS X, run:\r\n\r\n    $ sudo python3 setup.py install\r\n\r\nIn Windows, run:\r\n\r\n    python setup.py install\r\n\r\n\r\n### Usage\r\n\r\nSeveral instructive examples are included in the examples subdirectory. Run these from the command line by typing:\r\n\r\n    $ cd examples\r\n    $ python3 test.py\r\n    $ python3 figures.py\r\n\r\nFrom wtihin the Python 3 interpreter, the following commands are all that is necessary to run the example dataset\r\nprovided in the examples/ subdirectory from the python interpreter.\r\n\r\n    >>> import lcmsseq\r\n    >>> lcmsseq.read_params('default.cfg')\r\n    >>> lcmsseq.process('compounds.csv')\r\n\r\nFor the time being, processing parameters are currently accessible from a parameter CSV file. The default parameters\r\n can be found in the bundled file \"default.cfg\". An explanation of the function of each parameter is given as a comment\r\n in this configuration file.\r\n\r\nAlternatively, the modules can be run from the command line as follows:\r\n\r\n    $ python3 lcmsseq.py dataset.csv parameters.cfg\r\n\r\nParameters:\r\n\r\n    <dataset.csv>: compound dataset filename\r\n\tFilename of a comma-delimited list of compounds extracted from LCMS data by, e.g., Agilent MassHunter Qualitative\r\n\t Analysis Find by Molecular Feature. The format of this file is described below under _Input Data_.\r\n\r\n    <parameters.cfg>: parameters filename\r\n\tFilename of a comma-delimited list of parameters key,value pairs. The bundled filed default.cfg shows the\r\n\texpected content of this file.\r\n\r\nThe parameter file specifies the location of two key comma-delimited databases, containing a list of adducts and bases.\r\nThe adduct database is a csv file containing a list of adduct exact masses for clustering. The base database is a csv\r\nfile containing chemical formulas that correspond to mass differences between degradative fragments differing by loss\r\nof a single RNA monomer. Further instructions are available in files examples/adducts.csv and examples/bases.csv . An\r\nExcel file is also included to aid in generating the base database starting from nucleoside chemical formulas.\r\n\r\n\r\n### Input Data\r\n\r\nAt the time of this initial release, the package has been designed to import comma-delimited (csv) files generated by\r\nAgilent MassHunter Qualitative Analysis software. Specifically, the file must be a list of compounds identified\r\nusing the \"Find by Molecular Feature\" algorithm. Guidelines on using this feature to generate useful datasets can\r\nbe found in our initial publication. Other compound-finding software are likely to be suitable, but this package\r\ncurrently expects to find several Agilent-generated column headings in the imported csv file.\r\n\r\nUse the CSV export file from Agilent MassHunter Qualitative Analysis software, or ensure your CSV file is a list of\r\ncompounds with one compound per row and contains (at the absolute minimum) the following column headers:\r\n\r\n    Cpd,Mass,RT,Vol\r\n\r\nThese columns contain the following information:\r\n\r\n    Cpd: compound ID (generally an integer)\r\n    Mass: neutral mass\r\n    RT: retention time\r\n    Vol: integrated intensity\r\n\r\nProcessing will fail if any of these columns are missing. The package can also filter on a number of other optional\r\ncolumn headers that are typically assigned by Agilent's software, although this filtering is not strictly required.\r\n\r\n\r\n### Additional comments\r\n\r\nThe module makes use of the python 3 multiprocessing package to spawn several parallel processes to generate walk\r\ntrajectories across the dataset. For this release, multicore features are operational in Linux and OS X environments.","google":"UA-69070519-1","note":"Don't delete this file! It's used internally to help with page regeneration."}